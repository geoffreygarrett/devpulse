"""bazelbuild/rules_rust - bazel_env/bzlmod example

See https://github.com/buildbuddy-io/bazel_env.bzl.
"""

# Module Definition
module(
    name = "devpulse",
    version = "0.1.0",
)

# Platform and Tool Dependencies
bazel_dep(name = "platforms", version = "0.0.9")
bazel_dep(name = "rules_rust", version = "0.48.0")
bazel_dep(name = "bazel_env.bzl", version = "0.1.1")

# Uncomment this line to override the rules_rust module with a local path
# local_path_override(
#     module_name = "rules_rust",
#     path = "../..",
# )

# Rust Toolchain Setup
rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(edition = "2021")
use_repo(rust, "rust_toolchains")

register_toolchains("@rust_toolchains//:all")

## Internal Dependencies Setup
#internal_deps = use_extension("//internal:bazel/deps.bzl", "internal_deps")
#internal_deps.register_deps()
internal_deps = use_extension("//internal:bazel/extensions.bzl", "internal_deps")
use_repo(internal_deps, "azure_spec", "github_spec", "openai_spec")

#use_repo(non_module_dependencies, "data_file")

# Crate Dependencies Setup
crate = use_extension(
    "@rules_rust//crate_universe:extension.bzl",
    "crate",
)
crate.from_cargo(
    name = "crates",
    cargo_lockfile = "//:Cargo.lock",
    manifests = [
        "//:Cargo.toml",
        "//:api/Cargo.toml",
        "//:notes/Cargo.toml",
        "//:route/Cargo.toml",
        "//:tests/Cargo.toml",
        "//core:Cargo.toml",
        "//internal:Cargo.toml",
        "//proto:Cargo.toml",
    ],
)
use_repo(crate, "crates")

#
