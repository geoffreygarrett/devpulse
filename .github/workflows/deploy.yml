name: Shuttle Deploy ðŸš€

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  CACHE_NUMBER: 0

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Cache Cargo dependencies to speed up the build process
      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo 
            ~/.rustup
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ env.CACHE_NUMBER }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # 2. Deploy using Shuttle
      - uses: shuttle-hq/deploy-action@main
        with:
          deploy-key: ${{ secrets.SHUTTLE_API_KEY }}

  download_spec:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      # 4. Download the OpenAPI specification
      - name: Download OpenAPI spec
        run: |
          curl -o openapi.json https://devpulse.shuttleapp.rs/api-docs/openapi.json

      # 5. Upload the OpenAPI specification as an artifact
      - name: Upload OpenAPI spec
        uses: actions/upload-artifact@v4
        with:
          name: openapi-spec
          path: openapi.json

  generate_code:
    needs: download_spec  # Ensure the download_spec job completes first
    runs-on: ubuntu-latest
    strategy:
      matrix:
        client:
          - { type: 'python', extra_args: '--additional-properties=packageName=devpulse_client' }
          - { type: 'python-flask', extra_args: '' }
          - { type: 'rust', extra_args: '' }
          - { type: 'rust-server', extra_args: '' }
          - { type: 'rust-axum', extra_args: '' }
          - { type: 'csharp', extra_args: '' }
          - { type: 'csharp-functions', extra_args: '' }
          - { type: 'go', extra_args: '' }
          - { type: 'typescript-fetch', extra_args: '' }
          - { type: 'typescript-node', extra_args: '' }
          - { type: 'java', extra_args: '' }
          - { type: 'dart', extra_args: '' }
          - { type: 'bash', extra_args: '' }
      fail-fast: false

    steps:
      # 6. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 7. Download the OpenAPI specification artifact
      - name: Download OpenAPI spec artifact
        uses: actions/download-artifact@v4
        with:
          name: openapi-spec
          path: ./openapi

      # 8. Generate client code from the OpenAPI specification
      - name: Generate code
        uses: hatamiarash7/openapi-generator@v0.3.0
        with:
          generator: ${{ matrix.client.type }}
          openapi-file: ./openapi/openapi.json
          output-dir: ${{ matrix.client.type }}-client
          command-args: ${{ matrix.client.extra_args }}

      # 9. Upload the generated client code as an artifact
      - name: Upload generated code
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.client.type }}-client
          path: ${{ matrix.client.type }}-client
