/*
 * OpenAI API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder, Eq)]
#[builder(setter(strip_option, into), default)]
pub struct ChatCompletionRequestFunctionMessage {
    /// The role of the messages author, in this case `function`.
    #[serde(rename = "role")]
    pub role: Role,
    /// The contents of the function message.
    #[serde(rename = "content", deserialize_with = "Option::deserialize")]
    pub content: Option<String>,
    /// The name of the function to call.
    #[serde(rename = "name")]
    pub name: String,
}

impl ChatCompletionRequestFunctionMessage {
    pub fn new(
        role: Role, content: Option<String>, name: String,
    ) -> ChatCompletionRequestFunctionMessage {
        ChatCompletionRequestFunctionMessage {
            role,
            content,
            name,
        }
    }

    pub fn builder() -> ChatCompletionRequestFunctionMessageBuilder {
        ChatCompletionRequestFunctionMessageBuilder::create_empty()
    }
}
/// The role of the messages author, in this case `function`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Role {
    #[serde(rename = "function")]
    Function,
}

impl Default for Role {
    fn default() -> Role {
        Self::Function
    }
}
