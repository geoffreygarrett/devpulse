/*
 * OpenAI API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// AssistantsNamedToolChoice : Specifies a tool the model should use. Use to force the model to call a specific tool.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder, Eq)]
#[builder(setter(strip_option, into), default)]
pub struct AssistantsNamedToolChoice {
    /// The type of the tool. If type is `function`, the function name must be set
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "function", skip_serializing_if = "Option::is_none")]
    pub function: Option<Box<models::ChatCompletionNamedToolChoiceFunction>>,
}

impl AssistantsNamedToolChoice {
    /// Specifies a tool the model should use. Use to force the model to call a specific tool.
    pub fn new(r#type: Type) -> AssistantsNamedToolChoice {
        AssistantsNamedToolChoice {
            r#type,
            function: None,
        }
    }

    pub fn builder() -> AssistantsNamedToolChoiceBuilder {
        AssistantsNamedToolChoiceBuilder::create_empty()
    }
}
/// The type of the tool. If type is `function`, the function name must be set
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "function")]
    Function,
    #[serde(rename = "code_interpreter")]
    CodeInterpreter,
    #[serde(rename = "file_search")]
    FileSearch,
}

impl Default for Type {
    fn default() -> Type {
        Self::Function
    }
}
