/*
 * OpenAI API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// CreateModerationResponse : Represents if a given text input is potentially harmful.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder, Eq)]
#[builder(setter(strip_option, into), default)]
pub struct CreateModerationResponse {
    /// The unique identifier for the moderation request.
    #[serde(rename = "id")]
    pub id: String,
    /// The model used to generate the moderation results.
    #[serde(rename = "model")]
    pub model: String,
    /// A list of moderation objects.
    #[serde(rename = "results")]
    pub results: Vec<models::CreateModerationResponseResultsInner>,
}

impl CreateModerationResponse {
    /// Represents if a given text input is potentially harmful.
    pub fn new(
        id: String, model: String, results: Vec<models::CreateModerationResponseResultsInner>,
    ) -> CreateModerationResponse {
        CreateModerationResponse { id, model, results }
    }

    pub fn builder() -> CreateModerationResponseBuilder {
        CreateModerationResponseBuilder::create_empty()
    }
}
