/*
 * OpenAI API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// RunStepDetailsToolCallsCodeOutputLogsObject : Text output from the Code Interpreter tool call as part of a run step.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder, Eq)]
#[builder(setter(strip_option, into), default)]
pub struct RunStepDetailsToolCallsCodeOutputLogsObject {
    /// Always `logs`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// The text output from the Code Interpreter tool call.
    #[serde(rename = "logs")]
    pub logs: String,
}

impl RunStepDetailsToolCallsCodeOutputLogsObject {
    /// Text output from the Code Interpreter tool call as part of a run step.
    pub fn new(r#type: Type, logs: String) -> RunStepDetailsToolCallsCodeOutputLogsObject {
        RunStepDetailsToolCallsCodeOutputLogsObject { r#type, logs }
    }

    pub fn builder() -> RunStepDetailsToolCallsCodeOutputLogsObjectBuilder {
        RunStepDetailsToolCallsCodeOutputLogsObjectBuilder::create_empty()
    }
}
/// Always `logs`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "logs")]
    Logs,
}

impl Default for Type {
    fn default() -> Type {
        Self::Logs
    }
}
