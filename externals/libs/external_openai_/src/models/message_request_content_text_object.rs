/*
 * OpenAI API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// MessageRequestContentTextObject : The text content that is part of a message.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder, Eq)]
#[builder(setter(strip_option, into), default)]
pub struct MessageRequestContentTextObject {
    /// Always `text`.
    #[serde(rename = "type")]
    pub r#type: Type,
    /// Text content to be sent to the model
    #[serde(rename = "text")]
    pub text: String,
}

impl MessageRequestContentTextObject {
    /// The text content that is part of a message.
    pub fn new(r#type: Type, text: String) -> MessageRequestContentTextObject {
        MessageRequestContentTextObject { r#type, text }
    }

    pub fn builder() -> MessageRequestContentTextObjectBuilder {
        MessageRequestContentTextObjectBuilder::create_empty()
    }
}
/// Always `text`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "text")]
    Text,
}

impl Default for Type {
    fn default() -> Type {
        Self::Text
    }
}
