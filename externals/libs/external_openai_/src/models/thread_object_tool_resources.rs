/*
 * OpenAI API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// ThreadObjectToolResources : A set of resources that are made available to the assistant's tools in this thread. The resources are specific to the type of tool. For example, the `code_interpreter` tool requires a list of file IDs, while the `file_search` tool requires a list of vector store IDs.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder, Eq)]
#[builder(setter(strip_option, into), default)]
pub struct ThreadObjectToolResources {
    #[serde(rename = "code_interpreter", skip_serializing_if = "Option::is_none")]
    pub code_interpreter: Option<Box<models::CreateAssistantRequestToolResourcesCodeInterpreter>>,
    #[serde(rename = "file_search", skip_serializing_if = "Option::is_none")]
    pub file_search: Option<Box<models::ThreadObjectToolResourcesFileSearch>>,
}

impl ThreadObjectToolResources {
    /// A set of resources that are made available to the assistant's tools in this thread. The resources are specific to the type of tool. For example, the `code_interpreter` tool requires a list of file IDs, while the `file_search` tool requires a list of vector store IDs.
    pub fn new() -> ThreadObjectToolResources {
        ThreadObjectToolResources {
            code_interpreter: None,
            file_search: None,
        }
    }

    pub fn builder() -> ThreadObjectToolResourcesBuilder {
        ThreadObjectToolResourcesBuilder::create_empty()
    }
}
