/*
 * Git
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// GitPushRef :
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder)]
#[builder(setter(strip_option, into), default)]
pub struct GitPushRef {
    #[serde(rename = "_links", skip_serializing_if = "Option::is_none")]
    pub _links: Option<Box<models::ReferenceLinks>>,
    #[serde(rename = "date", skip_serializing_if = "Option::is_none")]
    pub date: Option<String>,
    #[serde(rename = "pushedBy", skip_serializing_if = "Option::is_none")]
    pub pushed_by: Option<Box<models::IdentityRef>>,
    #[serde(rename = "pushId", skip_serializing_if = "Option::is_none")]
    pub push_id: Option<i32>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
}

impl GitPushRef {
    ///
    pub fn new() -> GitPushRef {
        GitPushRef {
            _links: None,
            date: None,
            pushed_by: None,
            push_id: None,
            url: None,
        }
    }

    pub fn builder() -> GitPushRefBuilder {
        GitPushRefBuilder::create_empty()
    }
}
