/*
 * Git
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// GitStatusContext : Status context that uniquely identifies the status.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder)]
#[builder(setter(strip_option, into), default)]
pub struct GitStatusContext {
    /// Genre of the status. Typically name of the service/tool generating the status, can be empty.
    #[serde(rename = "genre", skip_serializing_if = "Option::is_none")]
    pub genre: Option<String>,
    /// Name identifier of the status, cannot be null or empty.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl GitStatusContext {
    /// Status context that uniquely identifies the status.
    pub fn new() -> GitStatusContext {
        GitStatusContext {
            genre: None,
            name: None,
        }
    }

    pub fn builder() -> GitStatusContextBuilder {
        GitStatusContextBuilder::create_empty()
    }
}
