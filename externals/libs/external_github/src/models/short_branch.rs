/*
 * GitHub v3 REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// ShortBranch : Short Branch
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder, Eq)]
#[builder(setter(strip_option, into), default)]
pub struct ShortBranch {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "commit")]
    pub commit: Box<models::ShortBranchCommit>,
    #[serde(rename = "protected")]
    pub protected: bool,
    #[serde(rename = "protection", skip_serializing_if = "Option::is_none")]
    pub protection: Option<Box<models::BranchProtection>>,
    #[serde(rename = "protection_url", skip_serializing_if = "Option::is_none")]
    pub protection_url: Option<String>,
}

impl ShortBranch {
    /// Short Branch
    pub fn new(name: String, commit: models::ShortBranchCommit, protected: bool) -> ShortBranch {
        ShortBranch {
            name,
            commit: Box::new(commit),
            protected,
            protection: None,
            protection_url: None,
        }
    }

    pub fn builder() -> ShortBranchBuilder {
        ShortBranchBuilder::create_empty()
    }
}
