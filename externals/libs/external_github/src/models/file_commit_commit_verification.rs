/*
 * GitHub v3 REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder, Eq)]
#[builder(setter(strip_option, into), default)]
pub struct FileCommitCommitVerification {
    #[serde(rename = "verified", skip_serializing_if = "Option::is_none")]
    pub verified: Option<bool>,
    #[serde(rename = "reason", skip_serializing_if = "Option::is_none")]
    pub reason: Option<String>,
    #[serde(
        rename = "signature",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub signature: Option<Option<String>>,
    #[serde(
        rename = "payload",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub payload: Option<Option<String>>,
}

impl FileCommitCommitVerification {
    pub fn new() -> FileCommitCommitVerification {
        FileCommitCommitVerification {
            verified: None,
            reason: None,
            signature: None,
            payload: None,
        }
    }

    pub fn builder() -> FileCommitCommitVerificationBuilder {
        FileCommitCommitVerificationBuilder::create_empty()
    }
}
