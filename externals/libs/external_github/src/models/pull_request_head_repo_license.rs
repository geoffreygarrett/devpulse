/*
 * GitHub v3 REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder)]
#[builder(setter(strip_option, into), default)]
pub struct PullRequestHeadRepoLicense {
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "url", deserialize_with = "Option::deserialize")]
    pub url: Option<String>,
    #[serde(rename = "spdx_id", deserialize_with = "Option::deserialize")]
    pub spdx_id: Option<String>,
    #[serde(rename = "node_id")]
    pub node_id: String,
}

impl PullRequestHeadRepoLicense {
    pub fn new(
        key: String, name: String, url: Option<String>, spdx_id: Option<String>, node_id: String,
    ) -> PullRequestHeadRepoLicense {
        PullRequestHeadRepoLicense {
            key,
            name,
            url,
            spdx_id,
            node_id,
        }
    }

    pub fn builder() -> PullRequestHeadRepoLicenseBuilder {
        PullRequestHeadRepoLicenseBuilder::create_empty()
    }
}
