/*
 * GitHub v3 REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder)]
#[builder(setter(strip_option, into), default)]
pub struct ValidationErrorErrorsInner {
    #[serde(rename = "resource", skip_serializing_if = "Option::is_none")]
    pub resource: Option<String>,
    #[serde(rename = "field", skip_serializing_if = "Option::is_none")]
    pub field: Option<String>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "code")]
    pub code: String,
    #[serde(rename = "index", skip_serializing_if = "Option::is_none")]
    pub index: Option<i32>,
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<Box<models::ValidationErrorErrorsInnerValue>>,
}

impl ValidationErrorErrorsInner {
    pub fn new(code: String) -> ValidationErrorErrorsInner {
        ValidationErrorErrorsInner {
            resource: None,
            field: None,
            message: None,
            code,
            index: None,
            value: None,
        }
    }

    pub fn builder() -> ValidationErrorErrorsInnerBuilder {
        ValidationErrorErrorsInnerBuilder::create_empty()
    }
}
