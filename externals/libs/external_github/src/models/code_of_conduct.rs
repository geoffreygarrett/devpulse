/*
 * GitHub v3 REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// CodeOfConduct : Code Of Conduct
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder, Eq)]
#[builder(setter(strip_option, into), default)]
pub struct CodeOfConduct {
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "body", skip_serializing_if = "Option::is_none")]
    pub body: Option<String>,
    #[serde(rename = "html_url", deserialize_with = "Option::deserialize")]
    pub html_url: Option<String>,
}

impl CodeOfConduct {
    /// Code Of Conduct
    pub fn new(key: String, name: String, url: String, html_url: Option<String>) -> CodeOfConduct {
        CodeOfConduct {
            key,
            name,
            url,
            body: None,
            html_url,
        }
    }

    pub fn builder() -> CodeOfConductBuilder {
        CodeOfConductBuilder::create_empty()
    }
}
