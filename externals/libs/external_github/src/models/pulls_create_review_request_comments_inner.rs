/*
 * GitHub v3 REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder, Eq)]
#[builder(setter(strip_option, into), default)]
pub struct PullsCreateReviewRequestCommentsInner {
    /// The relative path to the file that necessitates a review comment.
    #[serde(rename = "path")]
    pub path: String,
    /// The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. The `position` value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<i32>,
    /// Text of the review comment.
    #[serde(rename = "body")]
    pub body: String,
    #[serde(rename = "line", skip_serializing_if = "Option::is_none")]
    pub line: Option<i32>,
    #[serde(rename = "side", skip_serializing_if = "Option::is_none")]
    pub side: Option<String>,
    #[serde(rename = "start_line", skip_serializing_if = "Option::is_none")]
    pub start_line: Option<i32>,
    #[serde(rename = "start_side", skip_serializing_if = "Option::is_none")]
    pub start_side: Option<String>,
}

impl PullsCreateReviewRequestCommentsInner {
    pub fn new(path: String, body: String) -> PullsCreateReviewRequestCommentsInner {
        PullsCreateReviewRequestCommentsInner {
            path,
            position: None,
            body,
            line: None,
            side: None,
            start_line: None,
            start_side: None,
        }
    }

    pub fn builder() -> PullsCreateReviewRequestCommentsInnerBuilder {
        PullsCreateReviewRequestCommentsInnerBuilder::create_empty()
    }
}
