/*
 * OpenAI API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder)]
#[builder(setter(strip_option, into), default)]
pub struct FineTuningIntegration {
    /// The type of the integration being enabled for the fine-tuning job
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "wandb")]
    pub wandb: Box<models::FineTuningIntegrationWandb>,
}

impl FineTuningIntegration {
    pub fn new(r#type: Type, wandb: models::FineTuningIntegrationWandb) -> FineTuningIntegration {
        FineTuningIntegration {
            r#type,
            wandb: Box::new(wandb),
        }
    }

    pub fn builder() -> FineTuningIntegrationBuilder {
        FineTuningIntegrationBuilder::create_empty()
    }
}
/// The type of the integration being enabled for the fine-tuning job
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "wandb")]
    Wandb,
}

impl Default for Type {
    fn default() -> Type {
        Self::Wandb
    }
}
