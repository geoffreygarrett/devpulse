/*
 * OpenAI API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder)]
#[builder(setter(strip_option, into), default)]
pub struct ListMessagesResponse {
    #[serde(rename = "object")]
    pub object: String,
    #[serde(rename = "data")]
    pub data: Vec<models::MessageObject>,
    #[serde(rename = "first_id")]
    pub first_id: String,
    #[serde(rename = "last_id")]
    pub last_id: String,
    #[serde(rename = "has_more")]
    pub has_more: bool,
}

impl ListMessagesResponse {
    pub fn new(
        object: String, data: Vec<models::MessageObject>, first_id: String, last_id: String,
        has_more: bool,
    ) -> ListMessagesResponse {
        ListMessagesResponse {
            object,
            data,
            first_id,
            last_id,
            has_more,
        }
    }

    pub fn builder() -> ListMessagesResponseBuilder {
        ListMessagesResponseBuilder::create_empty()
    }
}
