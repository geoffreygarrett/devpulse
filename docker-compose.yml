version: '3.8'

services:
  rest:
    build:
      context: .
      dockerfile: api/Dockerfile
    image: devpulse/api
    container_name: devpulse-rest
    environment:
      - RUST_LOG=info
      - REST_ADDRESS=0.0.0.0
      - REST_PORT=3002
      - GRPC_ADDRESS=0.0.0.0
      - GRPC_PORT=50051
    networks:
      - proxy
    ports:
      - "3002:3002"
      - "50051:50051"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3002/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - database
      - openfga

  database:
    build:
      context: .
      dockerfile: services/database/Dockerfile
    image: devpulse/database
    container_name: devpulse-database
    environment:
      - DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    networks:
      - proxy
      - data-access
    ports:
      - "50052:50052"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:12-alpine
    hostname: postgres
    restart: always
    container_name: devpulse-postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - proxy
      - data-access
      - external
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}" ]
      interval: 30s
      timeout: 10s
      retries: 3

  migrate:
    depends_on:
      postgres:
        condition: service_healthy
    image: openfga/openfga:latest
    container_name: migrate
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
    command: migrate
    networks:
      - proxy
      - data-access

  openfga:
    depends_on:
      migrate:
        condition: service_completed_successfully
    image: openfga/openfga:latest
    container_name: openfga
    command: run
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
      - OPENFGA_DATASTORE_MAX_OPEN_CONNS=100
      - OPENFGA_PLAYGROUND_ENABLED=true
      - OPENFGA_PLAYGROUND_PORT=3001
    networks:
      - proxy
      - data-access
      - external
    ports:
      - "8080:8080" # http
      - "8081:8081" # grpc
      - "3001:3001" # playground
      - "2112:2112" # prometheus metrics

  nginx:
    image: nginx:alpine
    container_name: devpulse-nginx
    ports:
      - "80:80"
    volumes:
      - "./nginx/templates:/etc/nginx/templates/"
      - "./nginx/entrypoint.sh:/nginx/entrypoint.sh"
    networks:
      - proxy
    environment:
      - NGINX_ENVSUBST_TEMPLATE_SUFFIX=.conf
      - API_DOMAIN=api.localhost
      - REST_SERVICE_HOST=rest
      - REST_SERVICE_PORT=3002
      - GRPC_DOMAIN=grpc.localhost
      - GRPC_SERVICE_HOST=rest
      - GRPC_SERVICE_PORT=50051
      - PLAYGROUND_DOMAIN=playground.localhost
      - PLAYGROUND_SERVICE_HOST=openfga
      - PLAYGROUND_SERVICE_PORT=3001
    entrypoint: ["/nginx/entrypoint.sh"]
    command: ["nginx", "-g", "daemon off;"]
    depends_on:
      - rest
      - openfga

networks:
  proxy:
    driver: bridge
    internal: true
  external:
    driver: bridge
  data-access:
    driver: bridge
    internal: true

volumes:
  db-data: { }
