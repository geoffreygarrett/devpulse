services:
  rest:
    build:
      context: .
      dockerfile: api/Dockerfile
    image: devpulse/api
    container_name: devpulse-rest
    ports:
      - "3000:3000"
      - "50051:50051"
    environment:
      - RUST_LOG=info
      - REST_ADDRESS=0.0.0.0
      - REST_PORT=3000
      - GRPC_ADDRESS=0.0.0.0
      - GRPC_PORT=50051
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/`)"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
    networks:
      - server-side
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  #  auth:
  #    build:
  #      context: .
  #      dockerfile: auth/Dockerfile
  #    image: devpulse/auth
  #    container_name: devpulse-auth
  #    ports:
  #      - "4000:4000"
  #    environment:
  #      - JWT_SECRET=${JWT_SECRET}
  #      - TOKEN_EXPIRATION=3600
  #      - JWT_ALGORITHM=HS256
  #      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
  #      - REFRESH_TOKEN_EXPIRATION=604800 # One week in seconds
  #    depends_on:
  #      - devpulse-api
  #    healthcheck:
  #      test: [ "CMD", "curl", "-f", "http://localhost:4000/health" ]
  #      interval: 30s
  #      timeout: 10s
  #      retries: 3
  #    labels:
  #      - "traefik.enable=true"
  #      - "traefik.http.routers.auth.rule=PathPrefix(`/auth`)"
  #      - "traefik.http.services.auth.loadbalancer.server.port=4000"
  #    networks:
  #      - server-side

  database:
    build:
      context: .
      dockerfile: db/Dockerfile
    image: devpulse/database
    container_name: devpulse-database
    environment:
      - DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    networks:
      - server-side
      - data-access
    ports:
      - "50052:50052"
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:12-alpine
    hostname: postgres
    restart: always
    container_name: devpulse-postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - data-access
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}" ]
      interval: 30s
      timeout: 10s
      retries: 3

  traefik:
    image: traefik:v2.5
    container_name: devpulse-traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - server-side

networks:
  server-side:
    driver: bridge

  data-access:
    driver: bridge

volumes:
  db-data: { }
