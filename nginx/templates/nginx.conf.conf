events {
    # configuration for events
}

http {
    # Common proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Connection "keep-alive";

#     # RESTful HTTP API configuration
#     server {
#         listen 80;
#         server_name api.localhost;
#
#         location / {
#             proxy_pass http://rest:3002/;
#         }
#     }

    server {
        listen 80;
        http2  on;
        server_name fga.localhost;

        location / {
            grpc_pass grpc://openfga:8081;
            error_page 502 = /error502grpc;
        }

        location = /error502grpc {
            internal;
            default_type application/grpc;
            add_header grpc-status 14;
            add_header content-length 0;
            return 204;
        }
    }

    # openfga
    server {
        listen 80;
        http2 on;
        server_name api.localhost;

        location / {
            grpc_pass grpc://${GRPC_SERVICE_HOST}:${GRPC_SERVICE_PORT};
            error_page 502 = /error502grpc;
        }

        location = /error502grpc {
            internal;
            default_type application/grpc;
            add_header grpc-status 14;
            add_header content-length 0;
            return 204;
        }
    }
#

# #     # gRPC API configuration
#     server {
#         listen 80 http2;
#         server_name ${GRPC_DOMAIN};
#
#         location / {
#             grpc_pass grpc://${GRPC_SERVICE_HOST}:${GRPC_SERVICE_PORT};
#             error_page 502 = /error502grpc;
#         }
#
#         location = /error502grpc {
#             internal;
#             default_type application/grpc;
#             add_header grpc-status 14;
#             add_header content-length 0;
#             return 204;
#         }
#     }

    # Playground and REST proxy configuration
    server {
        listen 3000;
        server_name ${PLAYGROUND_DOMAIN};

        location /rest/ {
            proxy_pass http://${REST_SERVICE_HOST}:${REST_SERVICE_PORT}/;
        }

        location /playground/ {
            proxy_pass http://${PLAYGROUND_SERVICE_HOST}:${PLAYGROUND_SERVICE_PORT}/;
            add_header X-Frame-Options "ALLOW-FROM https://play.fga.dev/";
            add_header Content-Security-Policy "frame-ancestors https://play.fga.dev;";
        }
    }
}
