syntax = "proto3";

package devpulse;

// Message representing a request to analyze a range of commits within a repository.
message CommitRangeRequest {
  string repository_url = 1;
  string start_commit = 2;
  string end_commit = 3;
}

// Message representing the response from analyzing a range of commits within a repository.
message CommitRangeResponse {
  string repository = 1;
  CommitRangeDetails commit_range = 2;
}

// Message representing the detailed results of a commit range analysis.
message CommitRangeDetails {
  string start_commit = 1;
  string end_commit = 2;
  int32 total_commits = 3;
  int32 total_additions = 4;
  int32 total_deletions = 5;
  repeated Contributor top_contributors = 6;
}

// Message representing a contributor's information in a commit range analysis.
message Contributor {
  string username = 1;
  int32 commits = 2;
}

// Message representing a developer's performance metrics.
message DeveloperPerformance {
  string username = 1;
  int32 total_commits = 2;
  int32 total_prs = 3;
  string average_time_to_merge = 4;
  repeated RepositoryContribution repositories = 5;
}

// Message representing a developer's contributions to a repository.
message RepositoryContribution {
  string url = 1;
  int32 commits = 2;
}

// Define the gRPC service
service DevPulseService {
  rpc AnalyzeCommitRange (CommitRangeRequest) returns (CommitRangeResponse);
  rpc GetDeveloperPerformance (DeveloperPerformanceRequest) returns (DeveloperPerformance);
}

// Request message for getting developer performance.
message DeveloperPerformanceRequest {
  string username = 1;
}
