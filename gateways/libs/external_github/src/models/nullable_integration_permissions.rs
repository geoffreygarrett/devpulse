/*
 * GitHub v3 REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// NullableIntegrationPermissions : The set of permissions for the GitHub app
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder)]
#[builder(setter(strip_option, into), default)]
pub struct NullableIntegrationPermissions {
    #[serde(rename = "issues", skip_serializing_if = "Option::is_none")]
    pub issues: Option<String>,
    #[serde(rename = "checks", skip_serializing_if = "Option::is_none")]
    pub checks: Option<String>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<String>,
    #[serde(rename = "contents", skip_serializing_if = "Option::is_none")]
    pub contents: Option<String>,
    #[serde(rename = "deployments", skip_serializing_if = "Option::is_none")]
    pub deployments: Option<String>,
}

impl NullableIntegrationPermissions {
    /// The set of permissions for the GitHub app
    pub fn new() -> NullableIntegrationPermissions {
        NullableIntegrationPermissions {
            issues: None,
            checks: None,
            metadata: None,
            contents: None,
            deployments: None,
        }
    }

    pub fn builder() -> NullableIntegrationPermissionsBuilder {
        NullableIntegrationPermissionsBuilder::create_empty()
    }
}
