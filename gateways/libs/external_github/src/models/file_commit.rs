/*
 * GitHub v3 REST API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// FileCommit : File Commit
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder, Eq)]
#[builder(setter(strip_option, into), default)]
pub struct FileCommit {
    #[serde(rename = "content", deserialize_with = "Option::deserialize")]
    pub content: Option<Box<models::FileCommitContent>>,
    #[serde(rename = "commit")]
    pub commit: Box<models::FileCommitCommit>,
}

impl FileCommit {
    /// File Commit
    pub fn new(
        content: Option<models::FileCommitContent>, commit: models::FileCommitCommit,
    ) -> FileCommit {
        FileCommit {
            content: if let Some(x) = content {
                Some(Box::new(x))
            } else {
                None
            },
            commit: Box::new(commit),
        }
    }

    pub fn builder() -> FileCommitBuilder {
        FileCommitBuilder::create_empty()
    }
}
