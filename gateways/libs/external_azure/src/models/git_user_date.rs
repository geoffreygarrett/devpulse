/*
 * Git
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 7.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// GitUserDate : User info and date for Git operations.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder)]
#[builder(setter(strip_option, into), default)]
pub struct GitUserDate {
    /// Date of the Git operation.
    #[serde(rename = "date", skip_serializing_if = "Option::is_none")]
    pub date: Option<String>,
    /// Email address of the user performing the Git operation.
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// Url for the user's avatar.
    #[serde(rename = "imageUrl", skip_serializing_if = "Option::is_none")]
    pub image_url: Option<String>,
    /// Name of the user performing the Git operation.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl GitUserDate {
    /// User info and date for Git operations.
    pub fn new() -> GitUserDate {
        GitUserDate {
            date: None,
            email: None,
            image_url: None,
            name: None,
        }
    }

    pub fn builder() -> GitUserDateBuilder {
        GitUserDateBuilder::create_empty()
    }
}
