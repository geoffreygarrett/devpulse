/*
 * OpenAI API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder, Eq)]
#[builder(setter(strip_option, into), default)]
pub struct CreateCompletionResponseChoicesInnerLogprobs {
    #[serde(rename = "text_offset", skip_serializing_if = "Option::is_none")]
    pub text_offset: Option<Vec<i32>>,
    #[serde(rename = "token_logprobs", skip_serializing_if = "Option::is_none")]
    pub token_logprobs: Option<Vec<f64>>,
    #[serde(rename = "tokens", skip_serializing_if = "Option::is_none")]
    pub tokens: Option<Vec<String>>,
    #[serde(rename = "top_logprobs", skip_serializing_if = "Option::is_none")]
    pub top_logprobs: Option<Vec<std::collections::HashMap<String, f64>>>,
}

impl CreateCompletionResponseChoicesInnerLogprobs {
    pub fn new() -> CreateCompletionResponseChoicesInnerLogprobs {
        CreateCompletionResponseChoicesInnerLogprobs {
            text_offset: None,
            token_logprobs: None,
            tokens: None,
            top_logprobs: None,
        }
    }

    pub fn builder() -> CreateCompletionResponseChoicesInnerLogprobsBuilder {
        CreateCompletionResponseChoicesInnerLogprobsBuilder::create_empty()
    }
}
