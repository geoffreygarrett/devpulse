/*
 * OpenAI API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder)]
#[builder(setter(strip_option, into), default)]
pub struct ChatCompletionRequestUserMessage {
    #[serde(rename = "content")]
    pub content: Box<models::ChatCompletionRequestUserMessageContent>,
    /// The role of the messages author, in this case `user`.
    #[serde(rename = "role")]
    pub role: Role,
    /// An optional name for the participant. Provides the model information to differentiate between participants of the same role.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl ChatCompletionRequestUserMessage {
    pub fn new(
        content: models::ChatCompletionRequestUserMessageContent, role: Role,
    ) -> ChatCompletionRequestUserMessage {
        ChatCompletionRequestUserMessage {
            content: Box::new(content),
            role,
            name: None,
        }
    }

    pub fn builder() -> ChatCompletionRequestUserMessageBuilder {
        ChatCompletionRequestUserMessageBuilder::create_empty()
    }
}
/// The role of the messages author, in this case `user`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Role {
    #[serde(rename = "user")]
    User,
}

impl Default for Role {
    fn default() -> Role {
        Self::User
    }
}
