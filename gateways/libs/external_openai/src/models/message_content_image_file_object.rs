/*
 * OpenAI API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// MessageContentImageFileObject : References an image [File](/docs/api-reference/files) in the content of a message.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder)]
#[builder(setter(strip_option, into), default)]
pub struct MessageContentImageFileObject {
    /// Always `image_file`.
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "image_file")]
    pub image_file: Box<models::MessageContentImageFileObjectImageFile>,
}

impl MessageContentImageFileObject {
    /// References an image [File](/docs/api-reference/files) in the content of a message.
    pub fn new(
        r#type: Type, image_file: models::MessageContentImageFileObjectImageFile,
    ) -> MessageContentImageFileObject {
        MessageContentImageFileObject {
            r#type,
            image_file: Box::new(image_file),
        }
    }

    pub fn builder() -> MessageContentImageFileObjectBuilder {
        MessageContentImageFileObjectBuilder::create_empty()
    }
}
/// Always `image_file`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "image_file")]
    ImageFile,
}

impl Default for Type {
    fn default() -> Type {
        Self::ImageFile
    }
}
