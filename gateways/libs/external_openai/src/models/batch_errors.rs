/*
 * OpenAI API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder)]
#[builder(setter(strip_option, into), default)]
pub struct BatchErrors {
    /// The object type, which is always `list`.
    #[serde(rename = "object", skip_serializing_if = "Option::is_none")]
    pub object: Option<String>,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Vec<models::BatchErrorsDataInner>>,
}

impl BatchErrors {
    pub fn new() -> BatchErrors {
        BatchErrors {
            object: None,
            data: None,
        }
    }

    pub fn builder() -> BatchErrorsBuilder {
        BatchErrorsBuilder::create_empty()
    }
}
