/*
 * OpenAI API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use derive_builder::Builder;
use serde::{Deserialize, Serialize};

/// MessageContentTextObject : The text content that is part of a message.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize, Builder)]
#[builder(setter(strip_option, into), default)]
pub struct MessageContentTextObject {
    /// Always `text`.
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "text")]
    pub text: Box<models::MessageContentTextObjectText>,
}

impl MessageContentTextObject {
    /// The text content that is part of a message.
    pub fn new(
        r#type: Type, text: models::MessageContentTextObjectText,
    ) -> MessageContentTextObject {
        MessageContentTextObject {
            r#type,
            text: Box::new(text),
        }
    }

    pub fn builder() -> MessageContentTextObjectBuilder {
        MessageContentTextObjectBuilder::create_empty()
    }
}
/// Always `text`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "text")]
    Text,
}

impl Default for Type {
    fn default() -> Type {
        Self::Text
    }
}
